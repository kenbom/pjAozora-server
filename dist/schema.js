"use strict";
var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.typeDefs = void 0;
var apollo_server_1 = require("apollo-server");
exports.typeDefs = (0, apollo_server_1.gql)(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  type Query {\n    users: [User!]!\n    hello: String\n    kamokus: [Kamoku!]!\n    shiwakes: [Shiwake!]!\n  }\n\n  type Mutation {\n    signup(credentials: CredentialsInput, userName: String ): AuthPayload\n    signin(credentials: CredentialsInput): AuthPayload\n    shiwakeCreate(input: ShiwakeCreateArgs): ShiwakePayload\n    shiwakeDelete(input: ShiwakeDeleteArgs): ShiwakePayload\n  }\n\n  type AuthPayload {\n    userErrors: [userError]\n    token: String\n  }\n\n  type ShiwakePayload {\n    userErrors: [userError]\n    shiwake: Shiwake\n  }\n\n  type userError {\n    message: String\n  }\n\n  input UserCreateArgs {\n    userName: String\n    mail: String\n    password: String!\n  }\n\n  input ShiwakeCreateArgs {\n    hasseiDate: String\n    tekiyou: String\n    kariCd: Int\n    kariName: String\n    kariKingaku: Int\n    kashiCd: Int\n    kashiName: String\n    kashiKingaku: Int\n    userId:Int\n  }\n\n  type User {\n    id: ID!\n    userName: String\n    mail: String\n    password: String!\n  }\n\n  type Kamoku {\n    kamokuCd: ID!\n    kamokuName: String\n    kariKubun: Boolean\n  }\n\n  type Shiwake {\n    id:Int\n    hasseiDate: String\n    tekiyou: String\n    kariCd: Int!\n    kariName: String!\n    kariKingaku: Int\n    kashiCd: Int!\n    kashiName: String!\n    kashiKingaku: Int\n    userId: Int!\n    createdAt:String\n  }\n\n  input CredentialsInput {\n    mail: String!\n    password: String!\n  }\n\n  input ShiwakeDeleteArgs {\n    shiwakeId: String\n  }\n"], ["\n  type Query {\n    users: [User!]!\n    hello: String\n    kamokus: [Kamoku!]!\n    shiwakes: [Shiwake!]!\n  }\n\n  type Mutation {\n    signup(credentials: CredentialsInput, userName: String ): AuthPayload\n    signin(credentials: CredentialsInput): AuthPayload\n    shiwakeCreate(input: ShiwakeCreateArgs): ShiwakePayload\n    shiwakeDelete(input: ShiwakeDeleteArgs): ShiwakePayload\n  }\n\n  type AuthPayload {\n    userErrors: [userError]\n    token: String\n  }\n\n  type ShiwakePayload {\n    userErrors: [userError]\n    shiwake: Shiwake\n  }\n\n  type userError {\n    message: String\n  }\n\n  input UserCreateArgs {\n    userName: String\n    mail: String\n    password: String!\n  }\n\n  input ShiwakeCreateArgs {\n    hasseiDate: String\n    tekiyou: String\n    kariCd: Int\n    kariName: String\n    kariKingaku: Int\n    kashiCd: Int\n    kashiName: String\n    kashiKingaku: Int\n    userId:Int\n  }\n\n  type User {\n    id: ID!\n    userName: String\n    mail: String\n    password: String!\n  }\n\n  type Kamoku {\n    kamokuCd: ID!\n    kamokuName: String\n    kariKubun: Boolean\n  }\n\n  type Shiwake {\n    id:Int\n    hasseiDate: String\n    tekiyou: String\n    kariCd: Int!\n    kariName: String!\n    kariKingaku: Int\n    kashiCd: Int!\n    kashiName: String!\n    kashiKingaku: Int\n    userId: Int!\n    createdAt:String\n  }\n\n  input CredentialsInput {\n    mail: String!\n    password: String!\n  }\n\n  input ShiwakeDeleteArgs {\n    shiwakeId: String\n  }\n"])));
var templateObject_1;
